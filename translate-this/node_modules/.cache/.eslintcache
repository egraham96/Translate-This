[{"C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\index.js":"1","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\App.js":"2","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\Header.js":"3","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\LoganGreeter.js":"4","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\Footer.js":"5","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\Question.js":"6","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\InputBox.js":"7","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\JokeBox.js":"8","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\TranslatorInput.js":"9","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\TranslatorJoke.js":"10"},{"size":326,"mtime":1688962901674,"results":"11","hashOfConfig":"12"},{"size":1466,"mtime":1688972936364,"results":"13","hashOfConfig":"12"},{"size":244,"mtime":1688972605382,"results":"14","hashOfConfig":"12"},{"size":1179,"mtime":1688971604375,"results":"15","hashOfConfig":"12"},{"size":2171,"mtime":1688972534516,"results":"16","hashOfConfig":"12"},{"size":2487,"mtime":1688962901672,"results":"17","hashOfConfig":"12"},{"size":2597,"mtime":1688973365216,"results":"18","hashOfConfig":"12"},{"size":2525,"mtime":1688973390727,"results":"19","hashOfConfig":"12"},{"size":3477,"mtime":1688973347262,"results":"20","hashOfConfig":"12"},{"size":3474,"mtime":1688962901673,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7je3es",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\index.js",[],[],"C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\App.js",[],[],"C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\Header.js",[],[],"C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\LoganGreeter.js",["58"],[],"import \"../styles.css\";\nimport { useState } from \"react\";\nimport Logan from \"../assets/Logan.png\";\nimport Question from \"./Question\";\n\n\nfunction LoganGreeter() {\n  const [showLogan, setShowLogan] = useState(true);\n\n  const handleLogan = () => {\n    if (showLogan){\n    setShowLogan(false)\n     } else {\n      setShowLogan(true)\n  };\n}\n\n      return (\n        <>\n      {showLogan ? (\n        <div>\n          <img\n            src={Logan}\n            style={{\n              height: \"400px\",\n              width: \"600px\",\n              margin: \"0 auto\",\n              padding: \"0px\"\n            }}\n          ></img>\n          <br></br>\n          <br></br>\n          <button\n            onClick={handleLogan}\n            style={{\n              display: \"block\",\n              margin: \"0 auto\",\n              fontFamily: \"Oswald\",\n              fontSize: \"20px\",\n              fontWeight: \"600\",\n              width: \"150px\",\n              backgroundColor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Let's get started!\n          </button>\n        </div>\n      ) : (\n        <Question></Question>\n      )}\n    </>\n  );\n}\n\nexport default LoganGreeter;\n","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\Footer.js",["59"],[],"import \"../styles.css\";\nimport Prime from \"../assets/Prime.png\"\n\nfunction Footer(props) {\n  return (\n    <div\n      style={{\n        marginTop: \"5px\",\n        fontFamily: \"Oswald\",\n        fontColor: \"#38302e\",\n        height: \"400px\",\n        width: \"600px\",\n        textAlign: \"center\",\n      }}\n    >\n      <p style={{ fontSize: \"24px\", textDecoration: \"underline\" }}>Acknowledgments:</p>\n      <img src={Prime} style={{ height: \"100px\", width: \"100px\", marginTop: \"5px\" }}></img>\n      <p>\n        Photo of Logan found{\" \"}\n        <a\n          style={{ color: \"#CCDAD1\" }}\n          href=\"https://www.eatingwell.com/article/8051294/are-logan-paul-prime-drinks-healthy-dietitian-review/\"\n        >\n          here\n        </a>\n      </p>\n      <p>\n        Photo of Prime found{\" \"}\n        <a\n          style={{ color: \"#CCDAD1\" }}\n          href=\"https://www.google.com/search?sxsrf=AB5stBitVzjDGyJmYTrWV50XTawh5sik1Q:1688717476295&q=prime+drink&tbm=isch&sa=X&ved=2ahUKEwjItbPqkvz_AhWCAjQIHbOvDPQQ0pQJegQIDRAB&biw=1440&bih=654&dpr=2#imgrc=ViIFmpctggNHlM\"\n        >\n          here\n        </a>\n      </p>\n      <p>\n        Speech bubbles added with help from{\" \"}\n        <a style={{ color: \"#CCDAD1\" }} href=\"https://phraseit.net/\">\n          here\n        </a>\n      </p>\n      <p>\n        Border design and source code found{\" \"}\n        <a\n          style={{ color: \"#CCDAD1\" }}\n          href=\"https://codepen.io/jadlimcaco/pen/ExjGrqJ\"\n        >\n          here\n        </a>\n      </p>\n      <br></br>\n      <p>\n        Created by Emma Graham for Aview International in July 2023\n      </p>\n      <p>\n        <a style={{ color: \"#CCDAD1\" }} href=\"https://github.com/egraham96\">\n          My GitHub\n        </a>\n      </p>\n      <p>\n        <a\n          style={{ color: \"#CCDAD1\" }}\n          href=\"https://www.linkedin.com/in/emmag96/\"\n        >\n          My LinkedIn\n        </a>\n      </p>\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          onClick={props.handleFooter}\n          style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n        >\n          Go Back\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Footer;\n","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\Question.js",[],[],"C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\InputBox.js",["60","61","62"],[],"import \"../styles.css\";\nimport { useState, useEffect } from \"react\";\nimport TranslatorInput from \"./TranslatorInput\";\nimport LoadingGif from \"../assets/Loading.gif\"\n\nfunction InputBox(props) {\n  const [showInputBox, setShowInputBox] = useState(true)\n  const [loading, setLoading] = useState(false);\n  const [freeInput, setFreeInput] = useState(\"\");\n\n  function saveInput() {\n    var val = localStorage.getItem(\"input\")\n    if (val) {\n      localStorage.clear()\n    } else {\n      localStorage.setItem(\"input\", freeInput)\n      handleInputBox()\n    }\n  }\n\n  function handleInputBox() {\n    if (showInputBox) {\n      setShowInputBox(false)\n    } else {\n      setShowInputBox(true)\n    }\n  }\n\n  function handleInputChange(event) {\n    setFreeInput(event.target.value)\n  };\n\n  if (showInputBox) {\n    return (\n      <>\n        {loading ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"400px\",\n              width: \"600px\",\n              fontFamily: \"Oswald\",\n            }}>\n            <img src={LoadingGif}>\n            </img>\n          </div>) : (\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              justifyContent: \"space-evenly\",\n              height: \"400px\",\n              width: \"600px\",\n              backgroundColor: \"transparent\",\n              fontFamily: \"Oswald\",\n            }}\n          >\n            <div>\n              <form>\n                <p style={{ fontSize: \"20px\", wordWrap: \"break-word\", marginBottom: \"30px\" }}>Enter at least one character to submit!</p>\n                <input style={{ width: \"110px\", height: \"35px\" }}\n                  type=\"text\"\n                  placeholder=\"hello\"\n                  onChange={handleInputChange} />\n                {freeInput ? (\n                  <button\n                    onClick={saveInput}\n                    style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\", marginLeft: \"20px\" }}>Submit\n                  </button>) : (null)}\n              </form>\n            </div>\n            <div>\n              <button\n                onClick={props.handleInputText}\n                style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n              >\n                Go Back\n              </button>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  } else {\n    return (<TranslatorInput handleInputBox={handleInputBox}></TranslatorInput>)\n  }\n}\nexport default InputBox;\n\n","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\JokeBox.js",["63","64"],[],"import \"../styles.css\";\nimport { useState, useEffect } from \"react\";\nimport TranslatorJoke from \"./TranslatorJoke\";\nimport LoadingGif from \"../assets/Loading.gif\"\n\nfunction JokeBox(props) {\nconst [showJokeBox, setShowJokeBox] = useState (true)\nconst [loading, setLoading] = useState(false);\nconst [jokeInput, setJokeInput] = useState(\"\");\n\nfunction saveInput() {\n    var val = localStorage.getItem(\"input\")\n    if(val){\n      localStorage.clear()\n    }else {\n      localStorage.setItem(\"input\", jokeInput)\n      handleJokeBox()\n    }\n}\n\nfunction handleJokeBox() {\n    if (showJokeBox){\n        setShowJokeBox(false)\n    }else{\n        setShowJokeBox(true)\n    }\n}\n\nasync function fetchJoke() {\n    try{\n        setLoading(true);\n        let response = await fetch('https://v2.jokeapi.dev/joke/Any?blacklistFlags=nsfw,religious,political,racist,sexist&format=txt&type=single')\n        let data = await response.text()\n        setJokeInput(data)\n        setLoading(false)\n    } catch(err) {\n                console.log(err);\n            }\n    }\n\n  if(showJokeBox){\n  return (\n    <>\n    {loading? (\n    <div\n    style={{\n      display:\"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"400px\",\n      width: \"600px\",\n      fontFamily: \"Oswald\",\n    }}>\n        <img src={LoadingGif}>\n            </img>\n            </div>):(\n    <div\n      style={{\n        display:\"flex\",\n        alignItems:\"center\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        height: \"400px\",\n        width: \"600px\",\n        backgroundColor: \"transparent\",\n        fontFamily: \"Oswald\",\n      }}>\n        <div style={{width: \"300px\", wordWrap: \"break-word\"}}>\n            <p style={{fontSize: \"20px\"}}>{jokeInput}</p>\n        </div>\n     <div><button\n          onClick={fetchJoke}\n          style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n        >\n        Fetch Joke\n        </button></div>\n        {jokeInput? (\n        <div><button\n          onClick={saveInput}\n          style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n        >\n        Translate it!\n        </button></div>): (null)}\n      <div>\n        <button\n          onClick={props.handleGetJoke}\n          style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n        >\n          Go Back\n        </button>\n      </div>\n    </div>)}\n    </>\n  );\n        } else {\n            return (<TranslatorJoke handleJokeBox={handleJokeBox}></TranslatorJoke>)\n        }\n}\nexport default JokeBox;\n","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\TranslatorInput.js",["65"],[],"import \"../styles.css\";\nimport { useState, useEffect } from \"react\";\nimport LoadingGif from \"../assets/Loading.gif\"\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction TranslatorInput(props) {\n  const [loading, setLoading] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [translatedInput, setTranslatedInput] = useState(\"\");\n\n  useEffect(() => {\n    var userInput = localStorage.getItem(\"input\");\n    if(userInput){\n    setInput(userInput);\n    }\n  }, [input]);\n\n  function handleLanguage(event){\n    setLanguage(event.target.value);\n  }\n\n  async function translateInput() {\n    if (input !== \"\" && language !== \"\") {\n      try {\n        setLoading(true);\n        const res = await fetch(\"https://libretranslate.de/translate\", {\n          method: 'POST',\n          body: JSON.stringify({\n            q: `${input}`,\n            source: \"auto\",\n            target: language,\n            api_key: apiKey\n          }),\n          headers: { \n            'accept':'application/json',\n            'content-type': 'application/json'\n          }\n        });\n        const data = await res.json();\n        setTranslatedInput(data.text);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n  \n\n      return(\n    <div\n      style={{\n        marginTop: \"5px\",\n        fontFamily: \"Oswald\",\n        fontColor: \"#38302e\",\n        height: \"400px\",\n        width: \"600px\",\n        backgroundColor: \"transparent\",\n        textAlign: \"center\",\n      }}\n    >\n      {input ? (\n        <div style={{ marginTop: \"20px\" }}>\n          <p style={{ fontSize: \"24px\", textDecoration: \"underline\" }}>\n            Your input:\n          </p>\n          <p>{input}</p>\n        </div>\n      ) : null}\n\n<div style={{ marginTop: \"20px\", fontFamily: \"Oswald\"}}>\n        <select onChange = {handleLanguage} style={{height:\"30px\", textAlign: \"center\" }}>\n          <option value=\"en\">English</option>\n          <option value=\"fr\">French</option>\n          <option value=\"hi\">Hindi</option>\n          <option value=\"es\">Spanish</option>\n          <option value=\"ru\">Russian</option>\n          <option value=\"pt\">Portuguese</option>\n          <option value=\"ur\">Urdu</option>\n          <option value=\"te\">Telugu</option>\n          <option value=\"nl\">Dutch</option>\n          <option value=\"tl\">Tagalog</option>\n          <option value=\"id\">Indonesian</option>\n          <option value=\"bn\">Bengali</option>\n          <option value=\"ar\">Arabic</option>\n          <option value=\"de\">German</option>\n          <option value=\"mr\">Marathi</option>\n          <option value=\"ja\">Japanese</option>\n        </select>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          onClick={translateInput}\n          style={{ fontFamily: \"Oswald\", width: \"130px\", height: \"40px\", backgroundColor: \"#6f6866\", color:\"white\" }}\n        >\n          Translate!\n        </button>\n        </div>\n        {loading? (\n        <img style={{marginTop: \"20px\"}}src={LoadingGif}></img>): (null)}\n        {translatedInput? (\n        <div>{translatedInput}</div>): (null)}\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          onClick={props.handleInputBox}\n          style={{ fontFamily: \"Oswald\", width: \"130px\", height: \"40px\", backgroundColor: \"#6f6866\", color:\"white\" }}\n        >\n          Go Back/Change Input\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default TranslatorInput;\n","C:\\Users\\Timothy Graham\\Translate-This\\translate-this\\src\\components\\TranslatorJoke.js",["66"],[],"import \"../styles.css\";\nimport { useState, useEffect } from \"react\";\nimport LoadingGif from \"../assets/Loading.gif\"\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction TranslatorJoke(props) {\n  const [loading, setLoading] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [translatedInput, setTranslatedInput] = useState(\"\");\n\n  useEffect(() => {\n    var userInput = localStorage.getItem(\"input\");\n    if(userInput){\n    setInput(userInput);\n    }\n  }, [input]);\n\n  function handleLanguage(event){\n    setLanguage(event.target.value);\n  }\n\n  async function translateInput() {\n    if (input !== \"\" && language !== \"\") {\n      try {\n        setLoading(true);\n        const res = await fetch(\"https://libretranslate.de/translate\", {\n          method: 'POST',\n          body: JSON.stringify({\n            q: `${input}`,\n            source: \"auto\",\n            target: language,\n            api_key: apiKey\n          }),\n          headers: { \n            'accept':'application/json',\n            'content-type': 'application/json'\n          }\n        });\n        const data = await res.json();\n        setTranslatedInput(data.text);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n  \n\n      return(\n    <div\n      style={{\n        marginTop: \"5px\",\n        fontFamily: \"Oswald\",\n        fontColor: \"#38302e\",\n        height: \"400px\",\n        width: \"600px\",\n        backgroundColor: \"transparent\",\n        textAlign: \"center\",\n      }}\n    >\n      {input ? (\n        <div style={{ marginTop: \"20px\" }}>\n          <p style={{ fontSize: \"24px\", textDecoration: \"underline\" }}>\n            Your input:\n          </p>\n          <p>{input}</p>\n        </div>\n      ) : null}\n\n<div style={{ marginTop: \"20px\", fontFamily: \"Oswald\"}}>\n        <select onChange = {handleLanguage} style={{height:\"30px\", textAlign: \"center\" }}>\n          <option value=\"en\">English</option>\n          <option value=\"fr\">French</option>\n          <option value=\"hi\">Hindi</option>\n          <option value=\"es\">Spanish</option>\n          <option value=\"ru\">Russian</option>\n          <option value=\"pt\">Portuguese</option>\n          <option value=\"ur\">Urdu</option>\n          <option value=\"te\">Telugu</option>\n          <option value=\"nl\">Dutch</option>\n          <option value=\"tl\">Tagalog</option>\n          <option value=\"id\">Indonesian</option>\n          <option value=\"bn\">Bengali</option>\n          <option value=\"ar\">Arabic</option>\n          <option value=\"de\">German</option>\n          <option value=\"mr\">Marathi</option>\n          <option value=\"ja\">Japanese</option>\n        </select>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          onClick={translateInput}\n          style={{ fontFamily: \"Oswald\", width: \"130px\", height: \"40px\", backgroundColor: \"#6f6866\", color:\"white\" }}\n        >\n          Translate!\n        </button>\n        </div>\n        {loading? (\n        <img style={{marginTop: \"20px\"}}src={LoadingGif}></img>): (null)}\n        {translatedInput? (\n        <div>{translatedInput}</div>): (null)}\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          onClick={props.handleJokeBox}\n          style={{ fontFamily: \"Oswald\", width: \"130px\", height: \"40px\", backgroundColor: \"#6f6866\", color:\"white\" }}\n        >\n          Go Back/Change Input\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default TranslatorJoke;\n",{"ruleId":"67","severity":1,"message":"68","line":22,"column":11,"nodeType":"69","endLine":30,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":17,"column":7,"nodeType":"69","endLine":17,"endColumn":86},{"ruleId":"70","severity":1,"message":"71","line":2,"column":20,"nodeType":"72","messageId":"73","endLine":2,"endColumn":29},{"ruleId":"70","severity":1,"message":"74","line":8,"column":19,"nodeType":"72","messageId":"73","endLine":8,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":46,"column":13,"nodeType":"69","endLine":46,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":2,"column":20,"nodeType":"72","messageId":"73","endLine":2,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":54,"column":9,"nodeType":"69","endLine":54,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":100,"column":9,"nodeType":"69","endLine":100,"endColumn":58},{"ruleId":"67","severity":1,"message":"68","line":100,"column":9,"nodeType":"69","endLine":100,"endColumn":58},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used."]