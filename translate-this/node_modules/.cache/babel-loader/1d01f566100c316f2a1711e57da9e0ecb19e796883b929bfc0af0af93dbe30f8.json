{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Timothy Graham\\\\Translate-This\\\\translate-this\\\\src\\\\components\\\\JokeBox.js\",\n  _s = $RefreshSig$();\nimport \"../styles.css\";\nimport { useState, useEffect } from \"react\";\nimport TranslatorJoke from \"./TranslatorJoke\";\nimport LoadingGif from \"../assets/Loading.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JokeBox(props) {\n  _s();\n  const [showJokeBox, setShowJokeBox] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [jokeInput, setJokeInput] = useState(\"\");\n  function saveInput() {\n    var val = localStorage.getItem(\"input\");\n    if (val) {\n      localStorage.clear();\n    } else {\n      localStorage.setItem(\"input\", jokeInput);\n      handleJokeBox();\n    }\n  }\n  function handleJokeBox() {\n    if (showJokeBox) {\n      setShowJokeBox(false);\n    } else {\n      setShowJokeBox(true);\n    }\n  }\n  async function fetchJoke() {\n    try {\n      setLoading(true);\n      let response = await fetch('https://v2.jokeapi.dev/joke/Any?blacklistFlags=nsfw,religious,political,racist,sexist&format=txt&type=single');\n      let data = await response.text();\n      setJokeInput(data);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  if (showJokeBox) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"400px\",\n          width: \"600px\",\n          fontFamily: \"Oswald\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LoadingGif\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          justifyContent: \"space-evenly\",\n          height: \"400px\",\n          width: \"600px\",\n          backgroundColor: \"transparent\",\n          fontFamily: \"Oswald\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\",\n            wordWrap: \"break-word\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            children: jokeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchJoke,\n            style: {\n              fontFamily: \"Oswald\",\n              width: \"110px\",\n              height: \"35px\"\n            },\n            children: \"Fetch Joke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), jokeInput ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveInput,\n            style: {\n              fontFamily: \"Oswald\",\n              width: \"110px\",\n              height: \"35px\"\n            },\n            children: \"Translate it!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.handleGetJoke,\n            style: {\n              fontFamily: \"Oswald\",\n              width: \"110px\",\n              height: \"35px\"\n            },\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(TranslatorJoke, {\n      handleJokeBox: handleJokeBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this);\n  }\n}\n_s(JokeBox, \"wg7U4duqFuFqkWYfAtAuRLfewoQ=\");\n_c = JokeBox;\nexport default JokeBox;\nvar _c;\n$RefreshReg$(_c, \"JokeBox\");","map":{"version":3,"names":["useState","useEffect","TranslatorJoke","LoadingGif","jsxDEV","_jsxDEV","Fragment","_Fragment","JokeBox","props","_s","showJokeBox","setShowJokeBox","loading","setLoading","jokeInput","setJokeInput","saveInput","val","localStorage","getItem","clear","setItem","handleJokeBox","fetchJoke","response","fetch","data","text","err","console","log","children","style","display","justifyContent","alignItems","height","width","fontFamily","src","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","backgroundColor","wordWrap","fontSize","onClick","handleGetJoke","_c","$RefreshReg$"],"sources":["C:/Users/Timothy Graham/Translate-This/translate-this/src/components/JokeBox.js"],"sourcesContent":["import \"../styles.css\";\nimport { useState, useEffect } from \"react\";\nimport TranslatorJoke from \"./TranslatorJoke\";\nimport LoadingGif from \"../assets/Loading.gif\"\n\nfunction JokeBox(props) {\nconst [showJokeBox, setShowJokeBox] = useState (true)\nconst [loading, setLoading] = useState(false);\nconst [jokeInput, setJokeInput] = useState(\"\");\n\nfunction saveInput() {\n    var val = localStorage.getItem(\"input\")\n    if(val){\n      localStorage.clear()\n    }else {\n      localStorage.setItem(\"input\", jokeInput)\n      handleJokeBox()\n    }\n}\n\nfunction handleJokeBox() {\n    if (showJokeBox){\n        setShowJokeBox(false)\n    }else{\n        setShowJokeBox(true)\n    }\n}\n\nasync function fetchJoke() {\n    try{\n        setLoading(true);\n        let response = await fetch('https://v2.jokeapi.dev/joke/Any?blacklistFlags=nsfw,religious,political,racist,sexist&format=txt&type=single')\n        let data = await response.text()\n        setJokeInput(data)\n        setLoading(false)\n    } catch(err) {\n                console.log(err);\n            }\n    }\n\n  if(showJokeBox){\n  return (\n    <>\n    {loading? (\n    <div\n    style={{\n      display:\"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"400px\",\n      width: \"600px\",\n      fontFamily: \"Oswald\",\n    }}>\n        <img src={LoadingGif}>\n            </img>\n            </div>):(\n    <div\n      style={{\n        display:\"flex\",\n        alignItems:\"center\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        height: \"400px\",\n        width: \"600px\",\n        backgroundColor: \"transparent\",\n        fontFamily: \"Oswald\",\n      }}>\n        <div style={{width: \"300px\", wordWrap: \"break-word\"}}>\n            <p style={{fontSize: \"20px\"}}>{jokeInput}</p>\n        </div>\n     <div><button\n          onClick={fetchJoke}\n          style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n        >\n        Fetch Joke\n        </button></div>\n        {jokeInput? (\n        <div><button\n          onClick={saveInput}\n          style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n        >\n        Translate it!\n        </button></div>): (null)}\n      <div>\n        <button\n          onClick={props.handleGetJoke}\n          style={{ fontFamily: \"Oswald\", width: \"110px\", height: \"35px\" }}\n        >\n          Go Back\n        </button>\n      </div>\n    </div>)}\n    </>\n  );\n        } else {\n            return (<TranslatorJoke handleJokeBox={handleJokeBox}></TranslatorJoke>)\n        }\n}\nexport default JokeBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}